/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> ans;
        if(root==NULL){
            return ans;
        }
        queue<TreeNode*> q1;
        queue<TreeNode*> q2;
        q1.push(root);
        while(!q1.empty()||!q2.empty()){
            vector<int> a;
            while(!q1.empty()){    
                TreeNode* curr=q1.front();
                q1.pop();
                a.push_back(curr->val);
                if(curr->left!=NULL){
                    q2.push(curr->left);
                }
                if(curr->right!=NULL){
                    q2.push(curr->right);
                }
            }
            if(a.size()!=0){
                ans.push_back(a);
                a.clear();
            }
            while(!q2.empty()){
                TreeNode* curr=q2.front();
                q2.pop();
                a.push_back(curr->val);
                if(curr->left!=NULL){
                    q1.push(curr->left);
                }
                if(curr->right!=NULL){
                    q1.push(curr->right);
                }
            }
            if(a.size()!=0){
                ans.push_back(a);
            }
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};