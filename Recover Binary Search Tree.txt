/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int k=0;
    void finalhelper(TreeNode* root,vector<int>& v){
        if(!root){
            return;
        }
        finalhelper(root->left,v);
        root->val=v[k++];
        finalhelper(root->right,v);
    }
    void helper(TreeNode* root,vector<int>& v){
        if(!root){
            return;
        }
        helper(root->left,v);
        v.push_back(root->val);
        helper(root->right,v);
    }
    void recoverTree(TreeNode* root) {
        vector<int> v;
        helper(root,v);
        sort(v.begin(),v.end());
        finalhelper(root,v);
    }
};