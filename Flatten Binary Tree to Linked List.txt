/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
void helper(TreeNode* A){
    if(!A){
        return;
    }
    TreeNode* temp=A->right;
    A->right=A->left;
    A->left=NULL;
    TreeNode* node=A;
    while(node->right){
        node=node->right;
    }
    node->right=temp;
    helper(A->right);
}
TreeNode* Solution::flatten(TreeNode* A) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    if(!A){
        return A;
    }
    helper(A);
    return A;
}
