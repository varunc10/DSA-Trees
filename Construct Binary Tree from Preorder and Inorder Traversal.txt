/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* helper(vector<int>& preorder, vector<int>& inorder,int &j,int left,int right){
        if(left>right){
            return NULL;
        }
        int i=left;
        while(inorder[i]!=preorder[j]){
            i++;
        }   
        j++;
        TreeNode* curr=new TreeNode(inorder[i]);
        curr->left=helper(preorder,inorder,j,left,i-1);
        curr->right=helper(preorder,inorder,j,i+1,right);
        return curr;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int j=0;
        return helper(preorder,inorder,j,0,inorder.size()-1);
    }
};
